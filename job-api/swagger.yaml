openapi: 3.0.0

info:
  title: Jobs Api

  contact: {}

  version: "1.0"

servers:
  - url: https://mo-jobs-api-v1.herokuapp.com/api/v1

    variables: {}

paths:
  /auth/register:
    post:
      tags:
        - Auth

      summary: Register

      operationId: Register

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"

            example:
              username: momo123

              email: momo@gmail.com

              password: "secret123"

        required: true

      responses:
        "200":
          description: OK

          headers:
            x-next:
              content:
                text/plain:
                  schema:
                    type: string

                  example: aliqua cupidatat ex

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Detailsaboutauser"

              example:
                id: -1013742

                name: cupidatat labore nulla

                tag: do enim mollit ea

        "500":
          description: Internal Server Error

          headers: {}

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unexpectederror1"

              example:
                code: 82672049

                message: aliqua commodo nostrud ipsum

      deprecated: false

      security: []

  /auth/login:
    post:
      tags:
        - Auth

      summary: Login

      operationId: Login

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"

            example:
              username: momo123

              email: momo@gmail.com

              password: "secret123"

        required: true

      responses:
        "200":
          description: OK

          headers:
            x-next:
              content:
                text/plain:
                  schema:
                    type: string

                  example: aliqua cupidatat ex

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Detailsaboutauser"

              example:
                id: -1013742

                name: cupidatat labore nulla

                tag: do enim mollit ea

        "500":
          description: Internal Server Error

          headers: {}

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unexpectederror1"

              example:
                code: 82672049

                message: aliqua commodo nostrud ipsum

      deprecated: false

      security: []

  /jobs:
    get:
      tags:
        - jobs

      summary: Get All jobs

      operationId: GetAlljobs

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    post:
      tags:
        - jobs

      summary: Create Job

      operationId: CreateJob

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobRequest"

            example:
              company: The tech

              position: intern

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job id

    get:
      tags:
        - jobs

      summary: Get Single Job

      operationId: GetSingleJob

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    patch:
      tags:
        - jobs

      summary: Update Job

      operationId: UpdateJob

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateJobRequest"

            example:
              company: The tech

              position: intern

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    delete:
      tags:
        - jobs

      summary: Delete Job

      operationId: DeleteJob

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

components:
  schemas:
    RegisterRequest:
      title: RegisterRequest

      required:
        - username

        - email

        - password

      type: object

      properties:
        username:
          type: string

        email:
          type: string

        password:
          type: string

      example:
        username: momo123

        email: momo@gmail.com

        password: "secret123"

    Detailsaboutauser:
      title: Detailsaboutauser

      required:
        - id

        - name

        - tag

      type: object

      properties:
        id:
          type: integer

          format: int32

        name:
          type: string

        tag:
          type: string

      example:
        id: -1013742

        name: cupidatat labore nulla

        tag: do enim mollit ea

    unexpectederror1:
      title: unexpectederror1

      required:
        - code

        - message

      type: object

      properties:
        code:
          type: integer

          format: int32

        message:
          type: string

      example:
        code: 82672049

        message: aliqua commodo nostrud ipsum

    LoginRequest:
      title: LoginRequest

      required:
        - username

        - email

        - password

      type: object

      properties:
        username:
          type: string

        email:
          type: string

        password:
          type: string

      example:
        username: momo123

        email: momo@gmail.com

        password: "secret123"

    CreateJobRequest:
      title: CreateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: The tech

        position: intern

    UpdateJobRequest:
      title: UpdateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: The tech

        position: intern

    DeleteJobRequest:
      title: DeleteJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: The tech

        position: intern

  securitySchemes:
    bearer:
      type: http

      scheme: bearer

security: []

tags:
  - name: Auth

  - name: Crud

  - name: jobs

    description: ""
